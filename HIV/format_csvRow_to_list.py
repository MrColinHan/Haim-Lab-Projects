#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Feb  6 01:07:37 2019

@author: Han
"""

'''
    Translate a row copied from excel row into : 
    
        1. a list format:   ['KC882681', 'KC882799', 'KC882698']
        
        2. Chimera's command line input format : [295, 332, 339, 392]  (remember need to remove the brackets in Chimera)
'''


import re

Chimera = True
check_gly = False
positions = "3.296703297	14.28571429	5.494505495	24.17582418	6.593406593	24.17582418	29.67032967	16.48351648	17.58241758	3.296703297	9.89010989	23.07692308	0	0	0	0	0	10.98901099	8.791208791	2.197802198	1.098901099	8.791208791	4.395604396	10.98901099	17.58241758	18.68131868	27.47252747	13.18681319	21.97802198	10.98901099	27.47252747	14.28571429	24.17582418	6.593406593	1.098901099	4.395604396	1.098901099	1.098901099	1.098901099	0	0	2.197802198	0	0	0	26.37362637	6.593406593	1.098901099	9.89010989	24.17582418	2.197802198	0	1.098901099	2.197802198	3.296703297	0	8.791208791	2.197802198	12.08791209	9.89010989	7.692307692	8.791208791	24.17582418	3.296703297	14.28571429	0	0	20.87912088	0	2.197802198	1.098901099	0	0	1.098901099	0	1.098901099	1.098901099	4.395604396	2.197802198	24.17582418	0	7.692307692	0	29.67032967	27.47252747	3.296703297	46.15384615	7.692307692	3.296703297	4.395604396	1.098901099	12.08791209	0	5.494505495	5.494505495	1.098901099	23.07692308	2.197802198	5.494505495	2.197802198	4.395604396	17.58241758	1.098901099	0	8.791208791	4.395604396	0	15.38461538	1.098901099	4.395604396	2.197802198	0	8.791208791	5.494505495	5.494505495	2.197802198	6.593406593	0	0	2.197802198	6.593406593	3.296703297	2.197802198	3.296703297	6.593406593	1.098901099	3.296703297	2.197802198	0	54.94505495	1.098901099	46.15384615	62.63736264	49.45054945	75.82417582	78.02197802	78.02197802	82.41758242	82.41758242	78.02197802	83.51648352	73.62637363	78.02197802	81.31868132	81.31868132	82.41758242	76.92307692	75.82417582	73.62637363	68.13186813	74.72527473	60.43956044	29.67032967	25.27472527	26.37362637	9.89010989	0	7.692307692	3.296703297	21.97802198	34.06593407	6.593406593	4.395604396	7.692307692	24.17582418	35.16483516	3.296703297	13.18681319	48.35164835	37.36263736	40.65934066	27.47252747	31.86813187	1.098901099	5.494505495	1.098901099	2.197802198	36.26373626	8.791208791	0	24.17582418	21.97802198	25.27472527	18.68131868	65.93406593	63.73626374	68.13186813	62.63736264	53.84615385	49.45054945	0	14.28571429	3.296703297	4.395604396	10.98901099	0	4.395604396	6.593406593	2.197802198	19.78021978	18.68131868	13.18681319	1.098901099	5.494505495	1.098901099	0	0	7.692307692	10.98901099	0	12.08791209	0	1.098901099	0	4.395604396	2.197802198	2.197802198	0	7.692307692	1.098901099	1.098901099	0	5.494505495	2.197802198	2.197802198	1.098901099	1.098901099	1.098901099	6.593406593	31.86813187	29.67032967	18.68131868	1.098901099	24.17582418	0	21.97802198	0	8.791208791	0	34.06593407	6.593406593	8.791208791	1.098901099	5.494505495	3.296703297	2.197802198	2.197802198	1.098901099	1.098901099	0	3.296703297	4.395604396	0	2.197802198	7.692307692	3.296703297	0	1.098901099	0	0	1.098901099	3.296703297	0	0	6.593406593	6.593406593	10.98901099	42.85714286	37.36263736	14.28571429	19.78021978	7.692307692	9.89010989	7.692307692	16.48351648	21.97802198	17.58241758	13.18681319	35.16483516	8.791208791	42.85714286	8.791208791	12.08791209	2.197802198	4.395604396	1.098901099	16.48351648	17.58241758	38.46153846	47.25274725	34.06593407	15.38461538	49.45054945	2.197802198	45.05494505	1.098901099	30.76923077	0	4.395604396	35.16483516	10.98901099	3.296703297	7.692307692	6.593406593	30.76923077	16.48351648	25.27472527	9.89010989	4.395604396	2.197802198	2.197802198	1.098901099	1.098901099	1.098901099	6.593406593	23.07692308	8.791208791	12.08791209	12.08791209	20.87912088	23.07692308	10.98901099	19.78021978	3.296703297	36.26373626	6.593406593	4.395604396	29.67032967	0	38.46153846	0	40.65934066	7.692307692	38.46153846	56.04395604	73.62637363	62.63736264	0	48.35164835	68.13186813	15.38461538	9.89010989	45.05494505	59.34065934	10.98901099	46.15384615	63.73626374	14.28571429	1.098901099	48.35164835	40.65934066	34.06593407	12.08791209	35.16483516	14.28571429	50.54945055	37.36263736	39.56043956	6.593406593	64.83516484	6.593406593	56.04395604	27.47252747	26.37362637	17.58241758	0	1.098901099	0	19.78021978	0	5.494505495	8.791208791	8.791208791	0	5.494505495	3.296703297	4.395604396	2.197802198	30.76923077	4.395604396	0	0	3.296703297	0	0	27.47252747	2.197802198	19.78021978	60.43956044	1.098901099	0	41.75824176	57.14285714	48.35164835	41.75824176	68.13186813	69.23076923	57.14285714	67.03296703	42.85714286	35.16483516	28.57142857	24.17582418	63.73626374	75.82417582	78.02197802	84.61538462	74.72527473	76.92307692	73.62637363	69.23076923	63.73626374	61.53846154	17.58241758	28.57142857	14.28571429	26.37362637	1.098901099	19.78021978	1.098901099	12.08791209	1.098901099	10.98901099	6.593406593	2.197802198	4.395604396	0	0	30.76923077	2.197802198	0	17.58241758	1.098901099	14.28571429	1.098901099	2.197802198	2.197802198	0	5.494505495	31.86813187	0	28.57142857	3.296703297	17.58241758	0	53.84615385	0	37.36263736	5.494505495	2.197802198	3.296703297	10.98901099	5.494505495	2.197802198	7.692307692	10.98901099	3.296703297	0	13.18681319	84.61538462	82.41758242	80.21978022	76.92307692	76.92307692	68.13186813	2.197802198	58.24175824	3.296703297	1.098901099	3.296703297	16.48351648	0	1.098901099	21.97802198	3.296703297	6.593406593	5.494505495	4.395604396	1.098901099	4.395604396	3.296703297	7.692307692	0	0	2.197802198	1.098901099	0	3.296703297	1.098901099	2.197802198	12.08791209	6.593406593	0	1.098901099	1.098901099	25.27472527	0	0	2.197802198	46.15384615	3.296703297	10.98901099	2.197802198	2.197802198	6.593406593	2.197802198	16.48351648	6.593406593	20.87912088	2.197802198	4.395604396	1.098901099	10.98901099	3.296703297	16.48351648	1.098901099	4.395604396	15.38461538	9.89010989	4.395604396	3.296703297	4.395604396	0	4.395604396	12.08791209	0	0	1.098901099	2.197802198	0	0	1.098901099	0	4.395604396	16.48351648	10.98901099	1.098901099	0	7.692307692	5.494505495	6.593406593	5.494505495	4.395604396	5.494505495	1.098901099	8.791208791	0	1.098901099	0	1.098901099	1.098901099	1.098901099	17.58241758	0	0	0	13.18681319	1.098901099	0	0	2.197802198	0	2.197802198	6.593406593	8.791208791	0	3.296703297	1.098901099	3.296703297	2.197802198	0	2.197802198	2.197802198	0	0	1.098901099	6.593406593	14.28571429	0	3.296703297	0	0	9.89010989	1.098901099	1.098901099	1.098901099	1.098901099	16.48351648	0	3.296703297	5.494505495	1.098901099	0	4.395604396	12.08791209	1.098901099	2.197802198	2.197802198	0	1.098901099	2.197802198	13.18681319	1.098901099	0	1.098901099	1.098901099	17.58241758	1.098901099	5.494505495	1.098901099	10.98901099	21.97802198	5.494505495	0	7.692307692	17.58241758	19.78021978	16.48351648	34.06593407	61.53846154	34.06593407	1.098901099	3.296703297	53.84615385	1.098901099	7.692307692	0	0	4.395604396	5.494505495	1.098901099	10.98901099	16.48351648	3.296703297	5.494505495	31.86813187	9.89010989	5.494505495	1.098901099	54.94505495	28.57142857	0	2.197802198	41.75824176	1.098901099	0	1.098901099	34.06593407	4.395604396	0	36.26373626	3.296703297	0	7.692307692	29.67032967	1.098901099	3.296703297	10.98901099	17.58241758	0	1.098901099	14.28571429	1.098901099	10.98901099	17.58241758	2.197802198	21.97802198	26.37362637	0	0	27.47252747	1.098901099	5.494505495	47.25274725	2.197802198	6.593406593	40.65934066	2.197802198	0	5.494505495	3.296703297	0	26.37362637	7.692307692	1.098901099	4.395604396	14.28571429	9.89010989	6.593406593	0	0	1.098901099	5.494505495	3.296703297	2.197802198	0	4.395604396	15.38461538	7.692307692	14.28571429	5.494505495	16.48351648	4.395604396	12.08791209	7.692307692	3.296703297	4.395604396	3.296703297	1.098901099	1.098901099	0	1.098901099	2.197802198	1.098901099	1.098901099	1.098901099	8.791208791	1.098901099	3.296703297	4.395604396	29.67032967	0	24.17582418	18.68131868	12.08791209	21.97802198	17.58241758	3.296703297	4.395604396	21.97802198	32.96703297	31.86813187	4.395604396	3.296703297	5.494505495	17.58241758	6.593406593	1.098901099	3.296703297	5.494505495	13.18681319	21.97802198	27.47252747	20.87912088	1.098901099	13.18681319	0	1.098901099	1.098901099	27.47252747	0	2.197802198	5.494505495	9.89010989	10.98901099	16.48351648	0	14.28571429	1.098901099	2.197802198	1.098901099	16.48351648	0	3.296703297	6.593406593	4.395604396	14.28571429	5.494505495	7.692307692	17.58241758	2.197802198	4.395604396	4.395604396	17.58241758	14.28571429	5.494505495	7.692307692	16.48351648	21.97802198	2.197802198	19.78021978	10.98901099	2.197802198	12.08791209	3.296703297	5.494505495	31.86813187	18.68131868	5.494505495	2.197802198	7.692307692	28.57142857	4.395604396	12.08791209	10.98901099	1.098901099	13.18681319	26.37362637	18.68131868	32.96703297	7.692307692	2.197802198	3.296703297	13.18681319	8.791208791	2.197802198	6.593406593	3.296703297	40.65934066	8.791208791	5.494505495	20.87912088	18.68131868	5.494505495	20.87912088	5.494505495	20.87912088	34.06593407	4.395604396	5.494505495	25.27472527	7.692307692	8.791208791	8.791208791	6.593406593	1.098901099	0	3.296703297	15.38461538	3.296703297	12.08791209	46.15384615	31.86813187	12.08791209	20.87912088	19.78021978	28.57142857	5.494505495	13.18681319	13.18681319	27.47252747	9.89010989	14.28571429	3.296703297	15.38461538	3.296703297	14.28571429	1.098901099	2.197802198	3.296703297	15.38461538	0	18.68131868	7.692307692	0	8.791208791"

sep = re.sub("\s+", ",", positions)



result = []
current_index = 0
for i in range(len(sep)):
    if sep[i] == ',':
        if Chimera == True:
            result.append(float(sep[current_index:i]))
        else:
            result.append(sep[current_index:i])
        current_index = i+1
        
    if i == len(sep)-1: 
        if Chimera == True:
            result.append(float(sep[current_index:]))
        else:
            result.append(sep[current_index:])

# glycan mapping
child_position_mapping = {
    611: [1611],
    618: [1618],
    637: [1637],
    88: [1088, 1089, 1090, 1091, 1092, 1093, 1094],
    133: [1133],
    137: [1137, 1138, 1139, 1140],
    156: [1156, 1157, 1158, 1159, 1169],
    197: [1197, 1198],
    234: [1234, 1235],
    262: [1262, 1263, 1264, 1265, 1268, 1269],
    276: [1276],
    295: [1296, 1295],
    301: [1301, 1302],
    332: [1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340],
    355: [1355],
    363: [1363, 1364],
    386: [1386, 1387],
    392: [1392, 1393],
    448: [1448, 1449, 1450],
    339: [1839],
    160: [1160, 1161]
}

if check_gly == True:
    for root_pos in result:
        if root_pos in child_position_mapping:
            print(f"gly:{root_pos}")
            result = result + child_position_mapping[root_pos]

print(result)
